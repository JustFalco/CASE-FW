// <auto-generated />
using System;
using Data_access_layer.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_access_layer.Migrations
{
    [DbContext(typeof(CourseContext))]
    partial class CourseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseInstanceModelStudentModel", b =>
                {
                    b.Property<int>("AttendingCoursesId")
                        .HasColumnType("int");

                    b.Property<string>("StudentsFirstName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StudentsLastName")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AttendingCoursesId", "StudentsFirstName", "StudentsLastName");

                    b.HasIndex("StudentsFirstName", "StudentsLastName");

                    b.ToTable("CourseInstanceModelStudentModel");
                });

            modelBuilder.Entity("Data_access_layer.Models.CourseInstanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseInstances");
                });

            modelBuilder.Entity("Data_access_layer.Models.CourseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmountOfDays")
                        .HasColumnType("int");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Data_access_layer.Models.StudentModel", b =>
                {
                    b.Property<string>("FirstName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("FirstName", "LastName");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CourseInstanceModelStudentModel", b =>
                {
                    b.HasOne("Data_access_layer.Models.CourseInstanceModel", null)
                        .WithMany()
                        .HasForeignKey("AttendingCoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_access_layer.Models.StudentModel", null)
                        .WithMany()
                        .HasForeignKey("StudentsFirstName", "StudentsLastName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data_access_layer.Models.CourseInstanceModel", b =>
                {
                    b.HasOne("Data_access_layer.Models.CourseModel", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });
#pragma warning restore 612, 618
        }
    }
}
